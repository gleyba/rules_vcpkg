module(name = "vcpkg_examples")

bazel_dep(name = "platforms", version = "1.0.0")
bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "rules_vcpkg", version = "0.0.0")
local_path_override(
    module_name = "rules_vcpkg",
    path = "..",
)

vcpkg = use_extension("@rules_vcpkg//vcpkg:extensions.bzl", "vcpkg")
vcpkg.bootstrap(
    release = "2025.06.13",
    sha256 = "ea2d0f029331ef0f58cb2d87c5e3f2c4606d927c63dc81d56d81a632f3dca45d",
)

# vcpkg.install(package = "boost-asio")
# vcpkg.install(
#     cpus = "HOST_CPUS",
#     package = "openssl",
# )
# vcpkg.install(package = "fmt")
# vcpkg.install(
#     cpus = "HOST_CPUS",
#     package = "folly",
# )
# vcpkg.install(
#     cpus = "HOST_CPUS",
#     package = "duckdb",
# )
# vcpkg.install(
#     package = "qt",
#     cpus = "HOST_CPUS",
# )

# use_repo(
#     vcpkg,
#     "vcpkg",
#     "vcpkg_boost-asio",
#     "vcpkg_duckdb",
#     "vcpkg_fmt",
#     "vcpkg_folly",
#     "vcpkg_openssl",
#     "vcpkg_qt",
# )

vcpkg.install(package = "libxml2")
use_repo(
    vcpkg,
    "vcpkg",
    "vcpkg_libxml2",
)

register_toolchains("@vcpkg//:vcpkg_toolchain")
