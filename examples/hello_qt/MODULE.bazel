module(name = "vcpkg_examples")

bazel_dep(name = "platforms", version = "1.0.0")
bazel_dep(name = "rules_cc", version = "0.1.4")
bazel_dep(name = "bazel_skylib", version = "1.8.1")
bazel_dep(name = "rules_vcpkg", version = "0.0.0")
local_path_override(
    module_name = "rules_vcpkg",
    path = "../..",
)

vcpkg = use_extension("@rules_vcpkg//vcpkg:extensions.bzl", "vcpkg")
vcpkg.bootstrap(
    commit = "9e8416f15d93fa9347e3291bd8c128dd44200ba5",
    sha256 = "54aa9cc47ce67cc35664eb9ad455f9201d749d008d89c95072621b78f96d48ed",
    # verbose = True,
)
vcpkg.configure(
    cpus = "HOST_CPUS/2",
    package = "openssl",
)
vcpkg.configure(
    cpus = "HOST_CPUS/2",
    package = "libiconv",
)
vcpkg.configure(
    cpus = "HOST_CPUS/2",
    package = "protobuf",
)
vcpkg.configure(
    cpus = "HOST_CPUS/2",
    package = "grpc",
)
vcpkg.configure(
    cpus = "HOST_CPUS/2",
    package = "ffmpeg",
)
vcpkg.configure(
    cpus = "HOST_CPUS/2",
    package = "qtgrpc",
)
vcpkg.configure(
    cpus = "HOST_CPUS/2",
    package = "qt3d",
)
vcpkg.configure(
    cpus = "HOST_CPUS/2",
    # This fixup is only mandatory if network usage prohibited in sandbox
    # with `--nosandbox_default_allow_network`
    install_fixups = [
        "mkdir -p ${INSTALL_DIR}/share/qtbase",
        "cp ${PORT_DIR}/cmake/* ${INSTALL_DIR}/share/qtbase",
    ],
    package = "qtbase",
)
vcpkg.configure(
    cpus = "HOST_CPUS/2",
    package = "qtdeclarative",
)
vcpkg.configure(
    cpus = "HOST_CPUS/2",
    package = "qtapplicationmanager",
)
vcpkg.configure(
    cpus = "HOST_CPUS/2",
    package = "qttools",
)
vcpkg.configure(
    cpus = "HOST_CPUS/2",
    package = "qtdatavis3d",
)
vcpkg.configure(
    cpus = "HOST_CPUS/2",
    package = "qtmultimedia",
)
vcpkg.configure(
    cpus = "HOST_CPUS/2",
    package = "qttopcua",
)
vcpkg.configure(
    cpus = "HOST_CPUS/2",
    package = "qtquick3d",
)
vcpkg.configure(
    package = "vcpkg-get-python-packages",
    # This patch is only mandatory if network usage prohibited in sandbox
    # with `--nosandbox_default_allow_network`
    port_patches = [
        "//:x_vcpkg_get_python_packages.patch",
    ],
)
vcpkg.configure(
    cpus = "HOST_CPUS/2",
    package = "qtcharts",
)
vcpkg.install(package = "qt")
vcpkg.configure_prefixed(
    include_postfixes = [
        "QT6",
    ],
    package_prefix = "qt",
)
use_repo(
    vcpkg,
    "vcpkg",
    "vcpkg_bootstrap",
)

register_toolchains("@vcpkg_bootstrap//:vcpkg_toolchain")
