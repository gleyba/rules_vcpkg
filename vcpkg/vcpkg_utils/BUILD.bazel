load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")
load(":platform_utils.bzl", "vcpkg_platform_triplet")

config_setting(
    name = "arm64_osx",
    constraint_values = [
        "@platforms//cpu:arm64",
        "@platforms//os:osx",
    ],
)

config_setting(
    name = "is_release_build",
    values = {
        "compilation_mode": "opt",
    },
    visibility = ["//visibility:public"],
)

vcpkg_platform_triplet(
    name = "vcpkg_triplet",
    triplet = select({
        ":arm64_osx": "arm64-osx",
    }),
    visibility = ["//visibility:public"],
)

filegroup(
    name = "call_vcpkg_wrapper_tpl",
    srcs = ["call_vcpkg_wrapper.sh.tpl"],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "package_ctrl",
    srcs = ["package_ctrl.cpp"],
    hdrs = ["package_ctrl.hpp"],
)

cc_binary(
    name = "prepare_install_dir",
    srcs = ["prepare_install_dir.cpp"],
    visibility = ["//visibility:public"],
    deps = [":package_ctrl"],
)

cc_binary(
    name = "extract_package_outputs",
    srcs = ["extract_package_outputs.cpp"],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "_",
    srcs = ["empty.cpp"],
    cxxopts = ["-Wno-unused-function"],
    linkstatic = True,
    visibility = ["//visibility:public"],
)
