if(NOT _VCPKG_%%SYSTEM_NAME_SHORT_UPPER%%_TOOLCHAIN)
    set(_VCPKG_%%SYSTEM_NAME_SHORT_UPPER%%_TOOLCHAIN 1)

    if(POLICY CMP0056)
        cmake_policy(SET CMP0056 NEW)
    endif()
    if(POLICY CMP0066)
        cmake_policy(SET CMP0066 NEW)
    endif()
    if(POLICY CMP0067)
        cmake_policy(SET CMP0067 NEW)
    endif()
    if(POLICY CMP0137)
        cmake_policy(SET CMP0137 NEW)
    endif()

    set(VCPKG_TARGET_ARCHITECTURE %%ARCH_SHORT%%)
    set(VCPKG_CMAKE_SYSTEM_NAME %%SYSTEM_NAME_LONG%%)

    set(VCPKG_DETECTED_CMAKE_C_COMPILER "%%C_COMPILER%%")
    set(VCPKG_DETECTED_CMAKE_CXX_COMPILER "%%CXX_COMPILER%%")
    set(VCPKG_DETECTED_CMAKE_AR "%%AR%%")

    string(APPEND VCPKG_C_FLAGS " %%C_FLAGS%% ")
    string(APPEND VCPKG_CXX_FLAGS " %%CXX_FLAGS%% ")
    string(APPEND VCPKG_LINKER_FLAGS " %%LINKER_FLAGS%% ")

    string(APPEND VCPKG_C_FLAGS_DEBUG " %%C_FLAGS_DEBUG%% ")
    string(APPEND VCPKG_CXX_FLAGS_DEBUG " %%CXX_FLAGS_DEBUG%% ")
    string(APPEND VCPKG_C_FLAGS_RELEASE " %%C_FLAGS_RELEASE%% ")
    string(APPEND VCPKG_CXX_FLAGS_RELEASE " %%CXX_FLAGS_RELEASE%% ")
    string(APPEND VCPKG_LINKER_FLAGS_DEBUG " %%LINKER_FLAGS_DEBUG%% ")
    string(APPEND VCPKG_EXE_LINKER_FLAGS_DEBUG " %%EXE_LINKER_FLAGS_DEBUG%% ")
    string(APPEND VCPKG_LINKER_FLAGS_RELEASE " %%LINKER_FLAGS_RELEASE%% ")
    string(APPEND VCPKG_EXE_LINKER_FLAGS_RELEASE " %%EXE_LINKER_FLAGS_RELEASE%% ")    

    list(APPEND CMAKE_TRY_COMPILE_PLATFORM_VARIABLES
        VCPKG_CRT_LINKAGE VCPKG_TARGET_ARCHITECTURE
        VCPKG_C_FLAGS VCPKG_CXX_FLAGS
        VCPKG_C_FLAGS_DEBUG VCPKG_CXX_FLAGS_DEBUG
        VCPKG_C_FLAGS_RELEASE VCPKG_CXX_FLAGS_RELEASE
        VCPKG_LINKER_FLAGS VCPKG_LINKER_FLAGS_RELEASE VCPKG_LINKER_FLAGS_DEBUG
        VCPKG_EXE_LINKER_FLAGS_DEBUG VCPKG_EXE_LINKER_FLAGS_RELEASE
    )

    set(CMAKE_CROSSCOMPILING OFF CACHE BOOL "")

    if(VCPKG_CMAKE_SYSTEM_NAME STREQUAL "Darwin")
        set(CMAKE_SYSTEM_NAME Darwin CACHE STRING "")

        set(CMAKE_MACOSX_RPATH ON CACHE BOOL "")

        if(VCPKG_TARGET_ARCHITECTURE STREQUAL "x64")
            set(CMAKE_SYSTEM_PROCESSOR x86_64 CACHE STRING "")
        elseif(VCPKG_TARGET_ARCHITECTURE STREQUAL "arm64")
            set(CMAKE_SYSTEM_PROCESSOR arm64 CACHE STRING "")
        endif()
    elseif(VCPKG_CMAKE_SYSTEM_NAME STREQUAL "Linux")
        set(CMAKE_SYSTEM_NAME Linux CACHE STRING "")
        if(VCPKG_TARGET_ARCHITECTURE STREQUAL "x64")
            set(CMAKE_SYSTEM_PROCESSOR x86_64 CACHE STRING "")
        elseif(VCPKG_TARGET_ARCHITECTURE STREQUAL "arm64")
            set(CMAKE_SYSTEM_PROCESSOR aarch64 CACHE STRING "")
        endif()
    endif()

    set(CMAKE_C_COMPILER "${VCPKG_DETECTED_CMAKE_C_COMPILER}")
    set(CMAKE_CXX_COMPILER "${VCPKG_DETECTED_CMAKE_CXX_COMPILER}")
    set(CMAKE_AR "${VCPKG_DETECTED_CMAKE_AR}")

    string(APPEND CMAKE_C_FLAGS_INIT " -fPIC ${VCPKG_C_FLAGS} $ENV{ADDITIONAL_CFLAGS} ")
    string(APPEND CMAKE_CXX_FLAGS_INIT " -fPIC ${VCPKG_CXX_FLAGS} $ENV{ADDITIONAL_CFLAGS} ")
    string(APPEND CMAKE_C_FLAGS_DEBUG_INIT " ${VCPKG_C_FLAGS_DEBUG} ")
    string(APPEND CMAKE_CXX_FLAGS_DEBUG_INIT " ${VCPKG_CXX_FLAGS_DEBUG} ")
    string(APPEND CMAKE_C_FLAGS_RELEASE_INIT " ${VCPKG_C_FLAGS_RELEASE} ")
    string(APPEND CMAKE_CXX_FLAGS_RELEASE_INIT " ${VCPKG_CXX_FLAGS_RELEASE} ")

    string(APPEND CMAKE_MODULE_LINKER_FLAGS_INIT " ${VCPKG_LINKER_FLAGS} $ENV{ADDITIONAL_LINKER_FLAGS} ")
    string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT " ${VCPKG_LINKER_FLAGS} $ENV{ADDITIONAL_LINKER_FLAGS} ")
    string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT " ${VCPKG_LINKER_FLAGS} $ENV{ADDITIONAL_LINKER_FLAGS} ")
    string(APPEND CMAKE_MODULE_LINKER_FLAGS_DEBUG_INIT " ${VCPKG_LINKER_FLAGS_RELEASE} ")
    string(APPEND CMAKE_SHARED_LINKER_FLAGS_DEBUG_INIT " ${VCPKG_LINKER_FLAGS_RELEASE} ")
    string(APPEND CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT " ${VCPKG_EXE_LINKER_FLAGS_DEBUG} ")
    string(APPEND CMAKE_MODULE_LINKER_FLAGS_RELEASE_INIT " ${VCPKG_LINKER_FLAGS_RELEASE} ")
    string(APPEND CMAKE_SHARED_LINKER_FLAGS_RELEASE_INIT " ${VCPKG_LINKER_FLAGS_RELEASE} ")
    string(APPEND CMAKE_EXE_LINKER_FLAGS_RELEASE_INIT " ${VCPKG_EXE_LINKER_FLAGS_RELEASE} ")
endif()

